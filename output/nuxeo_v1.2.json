{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "https://nightly.nuxeo.com/nuxeo/site/api/v1",
  "resourcePath": "/workflowModel",
  "produces": [
    "application/json"
  ],
  "apis": [
    {
      "path": "/workflowModel/{modelName}",
      "description": "Browse workflow model",
      "operations": [
        {
          "method": "GET",
          "nickname": "getWorkflowModel",
          "type": "workflow",
          "parameters": [
            {
              "paramType": "path",
              "name": "modelName",
              "description": "Name of the workflow model",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Find a workflow model by its name",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/workflowModel/{modelName}/graph",
      "description": "Get the json serialization of a workflow model graph",
      "operations": [
        {
          "method": "GET",
          "nickname": "getWorkflowModelGraph",
          "parameters": [
            {
              "paramType": "path",
              "name": "modelName",
              "description": "Name of the workflow model",
              "required": true,
              "type": "string"
            }
          ],
          "type": "workflowGraph",
          "summary": "Get the json serialization of a workflow model graph",
          "notes": "Get the json serialization of a workflow model graph",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/workflowModel",
      "description": "List workflow",
      "operations": [
        {
          "method": "GET",
          "nickname": "getWorkflowModels",
          "type": "workflows",
          "summary": "Get the workflow models",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/workflow/{workflowInstanceId}",
      "description": "Browse workflow",
      "operations": [
        {
          "method": "GET",
          "nickname": "getWorkflowInstanceById",
          "type": "workflow",
          "parameters": [
            {
              "paramType": "path",
              "name": "workflowInstanceId",
              "description": "Id of the workflow instance",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Find a workflow instance by its id",
          "notes": "Only workflow instance which you have permission to see will be returned",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "DELETE",
          "nickname": "deleteWorkflowInstanceById",
          "parameters": [
            {
              "paramType": "path",
              "name": "workflowInstanceId",
              "description": "Id of the workflow instance",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Delete a workflow instance by its id",
          "notes": "Only workflow instance which you have permission to see will be returned",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/workflow",
      "description": "List workflow",
      "operations": [
        {
          "method": "GET",
          "nickname": "getRunningWorkflowInstancesLaunchedByCurrentUser",
          "type": "workflows",
          "summary": "Get the workflow instances launched by the current user",
          "notes": "Only workflow instances launched by current user will be returned",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "POST",
          "nickname": "createWorkflowInstanceById",
          "type": "workflowRequest",
          "parameters": [
            {
              "paramType": "body",
              "name": "workflowRequestBody",
              "description": "The workflow request describing the workflow instance to be created",
              "required": true,
              "type": "workflowRequest"
            }
          ],
          "summary": "Start a workflow instance",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/workflow/{workflowInstanceId}/graph",
      "description": "Get the json serialization of a workflow instance graph",
      "operations": [
        {
          "method": "GET",
          "nickname": "getWorkflowModelGraph",
          "parameters": [
            {
              "paramType": "path",
              "name": "workflowInstanceId",
              "description": "Id of the workflow instance",
              "required": true,
              "type": "string"
            }
          ],
          "type": "workflowGraph",
          "summary": "Get the json serialization of a workflow instance graph",
          "notes": "Get the json serialization of a workflow instance graph",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/id/{docId}/@workflow",
      "description": "Workflow adapter",
      "operations": [
        {
          "method": "GET",
          "nickname": "getDocumentWorkflow",
          "type": "workflows",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Get the workflow instances launched on the given document",
          "notes": "Only workflow instances launched by current user will be returned",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "POST",
          "nickname": "createWorkflowInstanceOnDocument",
          "type": "workflowRequest",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "workflowRequestBody",
              "description": "The workflow request describing the workflow instance to be created",
              "required": true,
              "type": "workflowRequest"
            }
          ],
          "summary": "Start a workflow instance on the given document",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/path/{docPath}/@workflow",
      "description": "Workflow adapter",
      "operations": [
        {
          "method": "GET",
          "nickname": "getDocumentWorkflow",
          "type": "workflows",
          "parameters": [
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Get the workflow instances launched on the given document",
          "notes": "Only workflow instances launched by current user will be returned",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "POST",
          "nickname": "createWorkflowInstanceOnDocument",
          "type": "workflowRequest",
          "parameters": [
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "workflowRequestBody",
              "description": "The workflow request describing the workflow instance to be created",
              "required": true,
              "type": "workflowRequest"
            }
          ],
          "summary": "Start a workflow instance on the given document",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/user/{userName}",
      "description": "Operation on users",
      "operations": [
        {
          "method": "GET",
          "nickname": "getUserByName",
          "type": "user",
          "parameters": [
            {
              "paramType": "path",
              "name": "userName",
              "description": "Username of the user, ex: 'Administrator'",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Get a user by its name",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "PUT",
          "nickname": "updateUserByName",
          "type": "user",
          "parameters": [
            {
              "paramType": "path",
              "name": "userName",
              "description": "Username of the user, ex: 'Administrator'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "user",
              "description": "The user to be created or updated",
              "required": true,
              "type": "user"
            }
          ],
          "summary": "Update a user by its name",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "DELETE",
          "nickname": "deleteUserByName",
          "type": "user",
          "parameters": [
            {
              "paramType": "path",
              "name": "userName",
              "description": "Username of the user, ex: 'Administrator'",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Delete a user by its name",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/user/search",
      "description": "Operation on users",
      "operations": [
        {
          "method": "GET",
          "nickname": "searchUser",
          "type": "users",
          "parameters": [
            {
              "paramType": "query",
              "name": "q",
              "description": "Query string",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Get a user by its name",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/user",
      "description": "Operation on users",
      "operations": [
        {
          "method": "POST",
          "nickname": "createUser",
          "type": "user",
          "parameters": [
            {
              "paramType": "body",
              "name": "user",
              "description": "The user to be created or updated",
              "required": true,
              "type": "user"
            }
          ],
          "summary": "Create a user",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/user/{userName}/group/{groupName}",
      "description": "Add a group to a user",
      "operations": [
        {
          "method": "POST",
          "nickname": "addAGroupToUser",
          "type": "user",
          "parameters": [
            {
              "paramType": "path",
              "name": "userName",
              "description": "Username of the user, ex: 'Administrator'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "groupName",
              "description": "Name of the group, ex: 'members'",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Add a group to a user",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/token",
      "description": "Authentication Token",
      "operations": [
        {
          "method": "GET",
          "nickname": "getTokens",
          "responseClass": "AuthenticationTokenList",
          "parameters": [
            {
              "paramType": "query",
              "name": "application",
              "description": "Application symbolic name",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Gets all readable authentication tokens",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "POST",
          "nickname": "createToken",
          "summary": "Acquire new authentication token",
          "parameters": [
            {
              "paramType": "query",
              "name": "application",
              "description": "Application symbolic name",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "deviceId",
              "description": "Device identifier",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "deviceDescription",
              "description": "Device description",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "permission",
              "description": "Permission granted with the authentication token",
              "required": true,
              "type": "string"
            }
          ],
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/token/{token}",
      "description": "Delete existing token",
      "operations": [
        {
          "method": "DELETE",
          "nickname": "deleteToken",
          "summary": "Delete an existing authentication token",
          "parameters": [
            {
              "paramType": "path",
              "name": "token",
              "description": "Authentication Token",
              "required": true,
              "type": "string"
            }
          ],
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/task",
      "description": "List tasks",
      "operations": [
        {
          "method": "GET",
          "nickname": "getTasks",
          "type": "tasks",
          "parameters": [
            {
              "paramType": "query",
              "name": "userId",
              "description": "id of the user who is actor of the task",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "workflowInstanceId",
              "description": "id of the workflow instance the task belongs to",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "workflowModelName",
              "description": "name of the workflow model of the task (i.e. 'SerialDocumentReview', 'ParallelDocumentReview')",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Query tasks by user and workflow ids",
          "notes": "Only task instance which you have permission to see will be returned",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/task/{taskId}",
      "description": "Get task by its id",
      "operations": [
        {
          "method": "GET",
          "nickname": "getTaskById",
          "type": "task",
          "parameters": [
            {
              "paramType": "path",
              "name": "taskId",
              "description": "Id of the task",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Get a task by its id",
          "notes": "Only task instance which you have permission to see will be returned",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/task/{taskId}/{action}",
      "description": "Complete task",
      "operations": [
        {
          "method": "PUT",
          "nickname": "completeTask",
          "parameters": [
            {
              "paramType": "path",
              "name": "taskId",
              "description": "Id of the task",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "action",
              "description": "the action to be applied when completed the task. The action determines the transition to be followed and the next task within the workflow.",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "taskCompletionRequestBody",
              "description": "The task completion describing the needed information to complete the task",
              "required": true,
              "type": "taskCompletionRequest"
            }
          ],
          "summary": "Complete task",
          "notes": "Complete a workflow related task",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/task/{taskId}/reassign",
      "description": "Reassign task",
      "operations": [
        {
          "method": "PUT",
          "nickname": "reassignTask",
          "parameters": [
            {
              "paramType": "path",
              "name": "taskId",
              "description": "Id of the task",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "actors",
              "description": "comma separated ids of the new actors",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "comment",
              "description": "comment",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Reassign a task",
          "notes": "See https://doc.nuxeo.com/x/1YcZAQ",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/task/{taskId}/delegate",
      "description": "Delegate task",
      "operations": [
        {
          "method": "PUT",
          "nickname": "delegateTask",
          "parameters": [
            {
              "paramType": "path",
              "name": "taskId",
              "description": "Id of the task",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "delegatedActors",
              "description": "comma separated ids of the delegated actors",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "comment",
              "description": "comment",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Delegate a task",
          "notes": "See https://doc.nuxeo.com/x/34z1",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/id/{docId}/@task",
      "description": "Task adapter",
      "operations": [
        {
          "method": "GET",
          "nickname": "getDocumentTasks",
          "type": "tasks",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "userId",
              "description": "id of the user who is actor of the task",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "workflowInstanceId",
              "description": "id of the workflow instance the task belongs to",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "workflowModelName",
              "description": "name of the workflow model of the task (i.e. 'SerialDocumentReview', 'ParallelDocumentReview')",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "List tasks of the given document",
          "notes": "Only task instance which you have permission to see will be returned",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/path/{docPath}/@task",
      "description": "Task adapter",
      "operations": [
        {
          "method": "GET",
          "nickname": "getDocumentRelatedWorkflowTasks",
          "type": "tasks",
          "parameters": [
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "userId",
              "description": "id of the user who is actor of the task",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "workflowInstanceId",
              "description": "id of the workflow instance the task belongs to",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "workflowModelName",
              "description": "name of the workflow model of the task (i.e. 'SerialDocumentReview', 'ParallelDocumentReview')",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "List tasks of the given document",
          "notes": "Only task instance which you have permission to see will be returned",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/path/{docPath}/@search",
      "description": "Operation on document's children by its id",
      "operations": [
        {
          "method": "GET",
          "nickname": "searchFromPath",
          "type": "documents",
          "parameters": [
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "currentPageIndex",
              "description": "Index of the current page",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "offset",
              "description": "The offset of the returned result set. If set, the 'currentPageIndex' parameter is ignored.",
              "required": false,
              "type": "integer"
            },
            {
              "paramType": "query",
              "name": "pageSize",
              "description": "Size of the page to retrieve",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "maxResults",
              "description": "Maximum results to retrieve",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "sortBy",
              "description": "Property to sort by, for example 'dc:title'",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "sortOrder",
              "description": "Sort order, accepts 'asc' or 'desc', default is 'desc'",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "query",
              "description": "NXQL query",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "fullText",
              "description": "A full text query",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "orderBy",
              "description": "Field on which to order",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXDocumentProperties",
              "description": "Schemas to be included in response",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXContext-Category",
              "description": "Categories to be included in context parameters map",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-Versioning-Option",
              "description": "Checkin Document Version. Return the last document version. (not live document) | Values: major or minor or none",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Get the children of a document by its path",
          "notes": "Only documents which you have permission to see will be returned",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/id/{docId}/@search",
      "description": "Operation on document's children by its id",
      "operations": [
        {
          "method": "GET",
          "nickname": "searchFromId",
          "type": "documents",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "query",
              "description": "NXQL query",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "fullText",
              "description": "A full text query",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "orderBy",
              "description": "Field on which to order",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "currentPageIndex",
              "description": "Index of the current page",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "offset",
              "description": "The offset of the returned result set. If set, the 'currentPageIndex' parameter is ignored.",
              "required": false,
              "type": "integer"
            },
            {
              "paramType": "query",
              "name": "pageSize",
              "description": "Size of the page to retrieve",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "maxResults",
              "description": "Maximum results to retrieve",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "sortBy",
              "description": "Property to sort by, for example 'dc:title'",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "sortOrder",
              "description": "Sort order, accepts 'asc' or 'desc', default is 'desc'",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXDocumentProperties",
              "description": "Schemas to be included in response",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXContext-Category",
              "description": "Categories to be included in context parameters map",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-Versioning-Option",
              "description": "Checkin Document Version. Return the last document version. (not live document) | Values: major or minor or none",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Get the children of a document by its id",
          "notes": "Only documents which you have permission to see will be returned",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/search/lang/{queryLanguage}/execute",
      "description": "Performs queries.",
      "operations": [
        {
          "method": "GET",
          "nickname": "query",
          "type": "documents",
          "parameters": [
            {
              "paramType": "path",
              "name": "queryLanguage",
              "description": "The query language.",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "query",
              "description": "The query to perform. (By default: SELECT * FROM Document)",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "pageSize",
              "description": "The number of entries per page. (By default: 0)",
              "required": false,
              "type": "integer"
            },
            {
              "paramType": "query",
              "name": "currentPageIndex",
              "description": "The selected page index. (By default: 0)",
              "required": false,
              "type": "integer"
            },
            {
              "paramType": "query",
              "name": "offset",
              "description": "The offset of the returned result set. If set, the 'currentPageIndex' parameter is ignored.",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "maxResults",
              "description": "The maximum entries. (By default: 200)",
              "required": false,
              "type": "integer"
            },
            {
              "paramType": "query",
              "name": "sortBy",
              "description": "Property(ies) sorting. (Example: sortBy='dc:title,dc:description')",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "sortOrder",
              "description": "Sort order. (Example: sortOrder='DESC,ASC')",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "queryParams",
              "description": "Ordered parameters. (Example: for 'Select * From Document where dc:title = ?' -> queryParams='titleA')",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Performs a search query.",
          "notes": "You can have also named parameters in the query. See http://doc.nuxeo.com/x/qAc5AQ",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/search/lang/{queryLanguage}/bulk/{actionId}",
      "description": "Executes bulk action.",
      "operations": [
        {
          "method": "POST",
          "nickname": "querybulk",
          "type": "bulkstatus",
          "parameters": [
            {
              "paramType": "path",
              "name": "queryLanguage",
              "description": "The query language.",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "query",
              "description": "The query to perform. (By default: SELECT * FROM Document)",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "queryParams",
              "description": "Ordered parameters. (Example: for 'Select * From Document where dc:title = ?' -> queryParams='titleA')",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "actionId",
              "description": "Id of the bulk action",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "bulk parameters",
              "description": "The bulk action parameters.",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Performs a bulk action on the query result.",
          "notes": "You can have also named parameters in the query. See http://doc.nuxeo.com/x/qAc5AQ",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/search/pp/{providerName}/execute",
      "description": "Executes a page provider.",
      "operations": [
        {
          "method": "GET",
          "nickname": "pageprovider",
          "type": "documents",
          "parameters": [
            {
              "paramType": "path",
              "name": "providerName",
              "description": "The page provider name.",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "pageSize",
              "description": "The number of entries per page. (By default: 0)",
              "required": false,
              "type": "integer"
            },
            {
              "paramType": "query",
              "name": "currentPageIndex",
              "description": "The selected page index. (By default: 0)",
              "required": false,
              "type": "integer"
            },
            {
              "paramType": "query",
              "name": "offset",
              "description": "The offset of the returned result set. If set, the 'currentPageIndex' parameter is ignored.",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "maxResults",
              "description": "The maximum entries. (By default: 200)",
              "required": false,
              "type": "integer"
            },
            {
              "paramType": "query",
              "name": "sortBy",
              "description": "Property(ies) sorting. (Example: sortBy='dc:title,dc:description')",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "sortOrder",
              "description": "Sort order. (Example: sortOrder='DESC,ASC')",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "queryParams",
              "description": "Ordered parameters. (Example: for 'Select * From Document where dc:title = ?' -> queryParams='titleA')",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Perform Named Page Provider on the repository",
          "notes": "You can have also named parameters in the query. See http://doc.nuxeo.com/x/qAc5AQ",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/search/pp/{providerName}/bulk/{actionId}",
      "description": "Executes bulk action.",
      "operations": [
        {
          "method": "POST",
          "nickname": "pageproviderbulk",
          "type": "bulkstatus",
          "parameters": [
            {
              "paramType": "path",
              "name": "providerName",
              "description": "The page provider name.",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "queryParams",
              "description": "Ordered parameters. (Example: for 'Select * From Document where dc:title = ?' -> queryParams='titleA')",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "actionId",
              "description": "Id of the bulk action",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "bulk parameters",
              "description": "The bulk action parameters.",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Performs a bulk action on the query result.",
          "notes": "You can have also named parameters in the query. See http://doc.nuxeo.com/x/qAc5AQ",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/search/pp/{providerName}",
      "description": "Retrieves a page provider's definition.",
      "operations": [
        {
          "method": "GET",
          "nickname": "getPageProviderDefinition",
          "type": "pageproviderdef",
          "parameters": [
            {
              "paramType": "path",
              "name": "providerName",
              "description": "The page provider name.",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Gets the definition of a page provider.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/search/saved",
      "description": "Saves and returns saved searches.",
      "operations": [
        {
          "method": "GET",
          "nickname": "getSavedSearches",
          "type": "savedsearches",
          "parameters": [
            {
              "paramType": "query",
              "name": "pageProvider",
              "description": "Name of the page provider.",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Returns the list of saved searches.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "POST",
          "nickname": "saveSearch",
          "type": "savedsearch",
          "parameters": [
            {
              "paramType": "body",
              "name": "saved search",
              "description": "The created or updated saved search object.",
              "required": true,
              "type": "savedsearch"
            }
          ],
          "summary": "Saves a search.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/search/saved/{searchId}",
      "description": "Gets, deletes and updates a saved search.",
      "operations": [
        {
          "method": "GET",
          "nickname": "getSavedSearch",
          "type": "savedsearch",
          "parameters": [
            {
              "paramType": "path",
              "name": "searchId",
              "description": "The search id.",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Return the saved search with the supplied id.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "PUT",
          "nickname": "updateSavedSearch",
          "type": "savedsearch",
          "parameters": [
            {
              "paramType": "path",
              "name": "searchId",
              "description": "The search id.",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "saved search",
              "description": "The created or updated saved search object.",
              "required": true,
              "type": "savedsearch"
            }
          ],
          "summary": "Updates the saved search with the supplied id.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "DELETE",
          "nickname": "deleteSavedSearch",
          "parameters": [
            {
              "paramType": "path",
              "name": "searchId",
              "description": "The search id.",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Deletes the saved search with the supplied id.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/search/saved/{searchId}/execute",
      "description": "Executes saved searches.",
      "operations": [
        {
          "method": "GET",
          "nickname": "executeSavedSearch",
          "type": "documents",
          "parameters": [
            {
              "paramType": "path",
              "name": "searchId",
              "description": "The search id.",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "pageSize",
              "description": "The number of entries per page. (By default: 0)",
              "required": false,
              "type": "integer"
            },
            {
              "paramType": "query",
              "name": "currentPageIndex",
              "description": "The selected page index. (By default: 0)",
              "required": false,
              "type": "integer"
            },
            {
              "paramType": "query",
              "name": "offset",
              "description": "The offset of the returned result set. If set, the 'currentPageIndex' parameter is ignored.",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "maxResults",
              "description": "The maximum entries. (By default: 200)",
              "required": false,
              "type": "integer"
            },
            {
              "paramType": "query",
              "name": "sortBy",
              "description": "Property(ies) sorting. (Example: sortBy='dc:title,dc:description')",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "sortOrder",
              "description": "Sort order. (Example: sortOrder='DESC,ASC')",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Executes saved searches, returning its results.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/search/saved/{searchId}/bulk/{actionId}",
      "description": "Executes a bulk action.",
      "operations": [
        {
          "method": "POST",
          "nickname": "savedsearchbulk",
          "type": "bulkstatus",
          "parameters": [
            {
              "paramType": "path",
              "name": "searchId",
              "description": "The search id.",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "actionId",
              "description": "Id of the bulk action",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "bulk parameters",
              "description": "The bulk action parameters.",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Performs a bulk action on the saved search result.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/config/schemas",
      "description": "List registered schemas",
      "operations": [
        {
          "method": "GET",
          "nickname": "getSchemas",
          "type": "schema",
          "summary": "List registered schemas",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/config/schemas/{schema}",
      "description": "Schema description",
      "operations": [
        {
          "method": "GET",
          "nickname": "getSchema",
          "type": "schema",
          "summary": "Schema description",
          "parameters": [
            {
              "paramType": "path",
              "name": "schema",
              "description": "The name of the schema",
              "required": true,
              "type": "string"
            }
          ],
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/path/{docPath}/@rendition/{renditionName}",
      "description": "Returns the specified rendition on document by its path",
      "operations": [
        {
          "method": "GET",
          "nickname": "getRenditionByPath",
          "type": "documents",
          "parameters": [
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "renditionName",
              "description": "Name of the rendition, ex: 'pdf'",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Returns the specified rendition on document by its path",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/id/{docId}/@rendition/{renditionName}",
      "description": "Returns the specified rendition on document by its id",
      "operations": [
        {
          "method": "GET",
          "nickname": "getRenditionById",
          "type": "documents",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "renditionName",
              "description": "Name of the rendition, ex: 'pdf'",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Returns the specified rendition on document by its id",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/query/{providerName}",
      "description": "Perform queries or page providers.",
      "operations": [
        {
          "method": "GET",
          "nickname": "pageprovider",
          "type": "search",
          "parameters": [
            {
              "paramType": "path",
              "name": "providerName",
              "description": "The page provider name.",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "pageSize",
              "description": "The number of entries per page. (By default: 0)",
              "required": false,
              "type": "integer"
            },
            {
              "paramType": "query",
              "name": "currentPageIndex",
              "description": "The selected page index. (By default: 0)",
              "required": false,
              "type": "integer"
            },
            {
              "paramType": "query",
              "name": "maxResults",
              "description": "The maximum entries. (By default: 200)",
              "required": false,
              "type": "integer"
            },
            {
              "paramType": "query",
              "name": "sortBy",
              "description": "Property(ies) sorting. (Example: sortBy='dc:title,dc:description')",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "sortOrder",
              "description": "Sort order. (Example: sortOrder='DESC,ASC')",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "queryParams",
              "description": "Ordered parameters. (Example: for 'Select * From Document where dc:title = ?' -> queryParams='titleA')",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Perform Named Page Provider on the repository",
          "notes": "You can have also named parameters in the query. See http://doc.nuxeo.com/x/qAc5AQ",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/query",
      "description": "Perform queries or page providers.",
      "operations": [
        {
          "method": "GET",
          "nickname": "query",
          "type": "search",
          "parameters": [
            {
              "paramType": "query",
              "name": "query",
              "description": "The query to perform. (By default: SELECT * FROM Document)",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "pageSize",
              "description": "The number of entries per page. (By default: 0)",
              "required": false,
              "type": "integer"
            },
            {
              "paramType": "query",
              "name": "currentPageIndex",
              "description": "The selected page index. (By default: 0)",
              "required": false,
              "type": "integer"
            },
            {
              "paramType": "query",
              "name": "maxResults",
              "description": "The maximum entries. (By default: 200)",
              "required": false,
              "type": "integer"
            },
            {
              "paramType": "query",
              "name": "sortBy",
              "description": "Property(ies) sorting. (Example: sortBy='dc:title,dc:description')",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "sortOrder",
              "description": "Sort order. (Example: sortOrder='DESC,ASC')",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "queryParams",
              "description": "Ordered parameters. (Example: for 'Select * From Document where dc:title = ?' -> queryParams='titleA')",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Perform Named Page Provider on the repository",
          "notes": "You can have also named parameters in the query. See http://doc.nuxeo.com/x/qAc5AQ",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/path/{docPath}/@pp/{pageProviderName}",
      "description": "Execute a page provider on document by its path",
      "operations": [
        {
          "method": "GET",
          "nickname": "getChildrenByPath",
          "type": "documents",
          "parameters": [
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "pageProviderName",
              "description": "Name of the page provider, ex: 'user_domains'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "currentPageIndex",
              "description": "Index of the current page",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "offset",
              "description": "The offset of the returned result set. If set, the 'currentPageIndex' parameter is ignored.",
              "required": false,
              "type": "integer"
            },
            {
              "paramType": "query",
              "name": "pageSize",
              "description": "Size of the page to retrieve",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "maxResults",
              "description": "Maximum results to retrieve",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "sortBy",
              "description": "Property to sort by, for example 'dc:title'",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "sortOrder",
              "description": "Sort order, accepts 'asc' or 'desc', default is 'desc'",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXDocumentProperties",
              "description": "Schemas to be included in response",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXContext-Category",
              "description": "Categories to be included in context parameters map",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-Versioning-Option",
              "description": "Checkin Document Version. Return the last document version. (not live document) | Values: major or minor or none",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Execute a page provider on document by its path",
          "notes": "Only documents which you have permission to see will be returned",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/id/{docId}/@pp/{pageProviderName}",
      "description": "Execute a page provider on document by its id",
      "operations": [
        {
          "method": "GET",
          "nickname": "getChildrenById",
          "type": "documents",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "pageProviderName",
              "description": "Name of the page provider, ex: 'user_domains'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "currentPageIndex",
              "description": "Index of the current page",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "offset",
              "description": "The offset of the returned result set. If set, the 'currentPageIndex' parameter is ignored.",
              "required": false,
              "type": "integer"
            },
            {
              "paramType": "query",
              "name": "pageSize",
              "description": "Size of the page to retrieve",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "maxResults",
              "description": "Maximum results to retrieve",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "sortBy",
              "description": "Property to sort by, for example 'dc:title'",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "sortOrder",
              "description": "Sort order, accepts 'asc' or 'desc', default is 'desc'",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXDocumentProperties",
              "description": "Schemas to be included in response",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXContext-Category",
              "description": "Categories to be included in context parameters map",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-Versioning-Option",
              "description": "Checkin Document Version. Return the last document version. (not live document) | Values: major or minor or none",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Execute a page provider on document by its id",
          "notes": "Only documents which you have permission to see will be returned",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/path/{docPath}",
      "description": "Browse documents by their path",
      "operations": [
        {
          "method": "GET",
          "nickname": "getDocumentByPath",
          "type": "document",
          "parameters": [
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXDocumentProperties",
              "description": "Schemas to be included in response",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXContext-Category",
              "description": "Categories to be included in context parameters map",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-Versioning-Option",
              "description": "Checkin Document Version. Return the last document version. (not live document) | Values: major or minor or none",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Find a document by its path",
          "notes": "Only documents which you have permission to see will be returned",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "PUT",
          "nickname": "updateDocumentByPath",
          "type": "document",
          "parameters": [
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "document",
              "description": "The created or updated document object",
              "required": true,
              "type": "document"
            },
            {
              "paramType": "header",
              "name": "X-NXDocumentProperties",
              "description": "Schemas to be included in response",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXContext-Category",
              "description": "Categories to be included in context parameters map",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-Versioning-Option",
              "description": "Checkin Document Version. Return the last document version. (not live document) | Values: major or minor or none",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Updates a document by its path",
          "notes": "Only documents which you have permission can be updated. Only the properties part of the document object is taken into account for update",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "DELETE",
          "nickname": "deleteDocumentByPath",
          "parameters": [
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Deletes a document by its path",
          "notes": "Only documents which you have permission can be deleted",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "POST",
          "nickname": "createDocumentByPath",
          "type": "document",
          "parameters": [
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "document",
              "description": "The created or updated document object",
              "required": true,
              "type": "document"
            },
            {
              "paramType": "header",
              "name": "X-NXDocumentProperties",
              "description": "Schemas to be included in response",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXContext-Category",
              "description": "Categories to be included in context parameters map",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-Versioning-Option",
              "description": "Checkin Document Version. Return the last document version. (not live document) | Values: major or minor or none",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Creates a document by its parent path",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/repo/{repoId}/path/{docPath}",
      "description": "Browse documents by their path",
      "operations": [
        {
          "method": "GET",
          "nickname": "getDocumentByPath",
          "type": "Document",
          "parameters": [
            {
              "paramType": "path",
              "name": "repoId",
              "description": "The name of the repository",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXDocumentProperties",
              "description": "Schemas to be included in response",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXContext-Category",
              "description": "Categories to be included in context parameters map",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-Versioning-Option",
              "description": "Checkin Document Version. Return the last document version. (not live document) | Values: major or minor or none",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Find a document by its path",
          "notes": "Only documents which you have permission to see will be returned",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "PUT",
          "nickname": "updateDocumentByPath",
          "type": "Document",
          "parameters": [
            {
              "paramType": "path",
              "name": "repoId",
              "description": "The name of the repository",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "document",
              "description": "The created or updated document object",
              "required": true,
              "type": "document"
            },
            {
              "paramType": "header",
              "name": "X-NXDocumentProperties",
              "description": "Schemas to be included in response",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXContext-Category",
              "description": "Categories to be included in context parameters map",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-Versioning-Option",
              "description": "Checkin Document Version. Return the last document version. (not live document) | Values: major or minor or none",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Updates a document by its path",
          "notes": "Only documents which you have permission can be updated. Only the properties part of the document object is taken into account for update",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "DELETE",
          "nickname": "deleteDocumentByPath",
          "parameters": [
            {
              "paramType": "path",
              "name": "repoId",
              "description": "The name of the repository",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Deletes a document by its path",
          "notes": "Only documents which you have permission to see will be returned",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "POST",
          "nickname": "createDocumentByPath",
          "type": "Document",
          "parameters": [
            {
              "paramType": "path",
              "name": "repoId",
              "description": "The name of the repository",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "document",
              "description": "The created or updated document object",
              "required": true,
              "type": "document"
            },
            {
              "paramType": "header",
              "name": "X-NXDocumentProperties",
              "description": "Schemas to be included in response",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXContext-Category",
              "description": "Categories to be included in context parameters map",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-Versioning-Option",
              "description": "Checkin Document Version. Return the last document version. (not live document) | Values: major or minor or none",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Creates a document by its parent path",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/oauth2/provider",
      "description": "Adds and retrieves OAuth2 providers",
      "operations": [
        {
          "method": "GET",
          "nickname": "getOAuth2Providers",
          "type": "oauth2ProviderDataList",
          "summary": "Retrieves the list of available OAuth2 providers.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "POST",
          "nickname": "addOAuth2Provider",
          "type": "oauth2ProviderData",
          "parameters": [
            {
              "paramType": "body",
              "name": "oauth2ProviderBody",
              "description": "The OAuth2 provider to be added or updated.",
              "required": true,
              "type": "oauth2ProviderData"
            }
          ],
          "summary": "Adds an OAuth2 provider.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/oauth2/provider/{oauth2ProviderId}",
      "description": "Updates, deletes and retrieves OAuth2 provider data",
      "operations": [
        {
          "method": "GET",
          "nickname": "getOauth2Provider",
          "type": "oauth2ProviderData",
          "parameters": [
            {
              "paramType": "path",
              "name": "oauth2ProviderId",
              "description": "Name of the OAuth2 provider",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Retrieves OAuth2 provider data for the current user.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "PUT",
          "nickname": "updateOAuth2Provider",
          "type": "oauth2ProviderData",
          "parameters": [
            {
              "paramType": "path",
              "name": "oauth2ProviderId",
              "description": "Name of the OAuth2 provider",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "oauth2ProviderBody",
              "description": "The OAuth2 provider to be added or updated.",
              "required": true,
              "type": "oauth2ProviderData"
            }
          ],
          "summary": "Updates an OAuth2 provider.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/oauth2/provider/{oauth2ProviderId}/token",
      "description": "Retrieves a valid access token",
      "operations": [
        {
          "method": "GET",
          "nickname": "getOauth2ProviderTokenData",
          "type": "oauth2ProviderTokenData",
          "parameters": [
            {
              "paramType": "path",
              "name": "oauth2ProviderId",
              "description": "Name of the OAuth2 provider",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Retrieves a valid access token to the current user. A new token will be request if the current one is expired.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/oauth2/token",
      "description": "Retrieves all OAuth2 tokens.",
      "operations": [
        {
          "method": "GET",
          "nickname": "getOauth2Tokens",
          "type": "oauth2TokenDataList",
          "summary": "Retrieves all OAuth2 tokens.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/oauth2/token/provider",
      "description": "Retrieves OAuth2 provider tokens for the current user.",
      "operations": [
        {
          "method": "GET",
          "nickname": "getOauth2UserProviderTokens",
          "type": "oauth2TokenDataList",
          "summary": "Retrieves all OAuth2 provider tokens for the current user.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/oauth2/token/provider/{oauth2ProviderId}/user/{username}",
      "description": "Gets, updates and deletes OAuth2 provider tokens.",
      "operations": [
        {
          "method": "GET",
          "nickname": "getOauth2ProviderToken",
          "type": "oauth2TokenData",
          "parameters": [
            {
              "paramType": "path",
              "name": "oauth2ProviderId",
              "description": "Name of the OAuth2 provider",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "userName",
              "description": "Username of the user, ex: 'Administrator'",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Gets an OAuth2 provider token.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "PUT",
          "nickname": "updateOauth2ProviderToken",
          "type": "oauth2TokenData",
          "parameters": [
            {
              "paramType": "path",
              "name": "oauth2ProviderId",
              "description": "Name of the OAuth2 provider",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "userName",
              "description": "Username of the user, ex: 'Administrator'",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Updates an OAuth2 provider token.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "DELETE",
          "nickname": "deleteOauth2ProviderToken",
          "parameters": [
            {
              "paramType": "path",
              "name": "oauth2ProviderId",
              "description": "Name of the OAuth2 provider",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "userName",
              "description": "Username of the user, ex: 'Administrator'",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Delete an OAuth2 provider token.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/oauth2/token/client",
      "description": "Retrieves OAuth2 client tokens for the current user.",
      "operations": [
        {
          "method": "GET",
          "nickname": "getOauth2UserClientTokens",
          "type": "oauth2TokenDataList",
          "summary": "Retrieves all OAuth2 client tokens for the current user.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/oauth2/token/client/{oauth2ClientId}/user/{username}",
      "description": "Retrieves updates, and deletes OAuth2 client tokens.",
      "operations": [
        {
          "method": "GET",
          "nickname": "getOauth2ClientToken",
          "type": "oauth2TokenData",
          "parameters": [
            {
              "paramType": "path",
              "name": "oauth2ClientId",
              "description": "Name of the OAuth2 client",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "userName",
              "description": "Username of the user, ex: 'Administrator'",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Retrieves a OAuth2 client token.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "PUT",
          "nickname": "updateOauth2ClientToken",
          "type": "oauth2TokenData",
          "parameters": [
            {
              "paramType": "path",
              "name": "oauth2ClientId",
              "description": "Name of the OAuth2 client",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "userName",
              "description": "Username of the user, ex: 'Administrator'",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Updates an OAuth2 client token.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "DELETE",
          "nickname": "deleteOauth2ClientToken",
          "parameters": [
            {
              "paramType": "path",
              "name": "oauth2ClientId",
              "description": "Name of the OAuth2 client",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "userName",
              "description": "Username of the user, ex: 'Administrator'",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Deletes a OAuth2 client token.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/oauth2/client",
      "description": "Retrieves all OAuth2 clients.",
      "operations": [
        {
          "method": "GET",
          "nickname": "getOauth2Clients",
          "type": "oauth2ClientDataList",
          "summary": "Retrieves a OAuth2 client.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/oauth2/client/{oauth2ClientId}",
      "description": "Retrieves a OAuth2 client.",
      "operations": [
        {
          "method": "GET",
          "nickname": "getOauth2Client",
          "type": "oauth2ClientData",
          "parameters": [
            {
              "paramType": "path",
              "name": "oauth2ClientId",
              "description": "Name of the OAuth2 client",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Retrieves a OAuth2 client.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/me",
      "description": "Operation on logged in user",
      "operations": [
        {
          "method": "GET",
          "nickname": "getLoggedInUser",
          "type": "user",
          "summary": "Get the logged in user",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/me/changepassword",
      "description": "Operation on logged in user",
      "operations": [
        {
          "method": "PUT",
          "nickname": "changePassword",
          "type": "user",
          "summary": "Change the logged in user's password",
          "parameters": [
            {
              "paramType": "body",
              "name": "passwordbody",
              "description": "The body containing the new password along with the old password for security check",
              "required": true,
              "type": "changePassword"
            }
          ],
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/id/{docId}",
      "description": "Browse documents by their id",
      "operations": [
        {
          "method": "GET",
          "nickname": "getDocumentById",
          "type": "document",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXDocumentProperties",
              "description": "Schemas to be included in response",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXContext-Category",
              "description": "Categories to be included in context parameters map",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-Versioning-Option",
              "description": "Checkin Document Version. Return the last document version. (not live document) | Values: major or minor or none",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Find a document by its id",
          "notes": "Only documents which you have permission to see will be returned",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "PUT",
          "nickname": "updateDocumentById",
          "type": "document",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "document",
              "description": "The created or updated document object",
              "required": true,
              "type": "document"
            },
            {
              "paramType": "header",
              "name": "X-NXDocumentProperties",
              "description": "Schemas to be included in response",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXContext-Category",
              "description": "Categories to be included in context parameters map",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-Versioning-Option",
              "description": "Checkin Document Version. Return the last document version. (not live document) | Values: major or minor or none",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Updates a document by its id",
          "notes": "Only documents which you have permission can be updated. Only the properties part of the document object is taken into account for update",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "DELETE",
          "nickname": "deleteDocumentById",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXDocumentProperties",
              "description": "Schemas to be included in response",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXContext-Category",
              "description": "Categories to be included in context parameters map",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-Versioning-Option",
              "description": "Checkin Document Version. Return the last document version. (not live document) | Values: major or minor or none",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Deletes a document by its id",
          "notes": "Only documents which you have permission to see will be returned",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "POST",
          "nickname": "createDocumentById",
          "type": "document",
          "parameters": [
            {
              "paramType": "path",
              "name": "repoId",
              "description": "The name of the repository",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "document",
              "description": "The created or updated document object",
              "required": true,
              "type": "document"
            }
          ],
          "summary": "Creates a document by its parent id",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/repo/{repoId}/id/{docId}",
      "description": "Browse documents by their id",
      "operations": [
        {
          "method": "GET",
          "nickname": "getDocumentById",
          "type": "document",
          "parameters": [
            {
              "paramType": "path",
              "name": "repoId",
              "description": "The name of the repository",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXDocumentProperties",
              "description": "Schemas to be included in response",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXContext-Category",
              "description": "Categories to be included in context parameters map",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-Versioning-Option",
              "description": "Checkin Document Version. Return the last document version. (not live document) | Values: major or minor or none",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Find a document by its id",
          "notes": "Only documents which you have permission to see will be returned",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "PUT",
          "nickname": "updateDocumentById",
          "type": "document",
          "parameters": [
            {
              "paramType": "path",
              "name": "repoId",
              "description": "The name of the repository",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "document",
              "description": "The created or updated document object",
              "required": true,
              "type": "document"
            },
            {
              "paramType": "header",
              "name": "X-NXDocumentProperties",
              "description": "Schemas to be included in response",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXContext-Category",
              "description": "Categories to be included in context parameters map",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-Versioning-Option",
              "description": "Checkin Document Version. Return the last document version. (not live document) | Values: major or minor or none",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Updates a document by its id",
          "notes": "Only documents which you have permission can be updated. Only the properties part of the document object is taken into account for update",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "DELETE",
          "nickname": "deleteDocumentById",
          "parameters": [
            {
              "paramType": "path",
              "name": "repoId",
              "description": "The name of the repository",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Deletes a document by its id",
          "notes": "Only documents which you have permission to see will be returned",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "POST",
          "nickname": "createDocumentById",
          "type": "document",
          "parameters": [
            {
              "paramType": "path",
              "name": "repoId",
              "description": "The name of the repository",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "document",
              "description": "The created or updated document object",
              "required": true,
              "type": "document"
            },
            {
              "paramType": "header",
              "name": "X-NXDocumentProperties",
              "description": "Schemas to be included in response",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXContext-Category",
              "description": "Categories to be included in context parameters map",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-Versioning-Option",
              "description": "Checkin Document Version. Return the last document version. (not live document) | Values: major or minor or none",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Creates a document by its parent id",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/group/{groupName}",
      "description": "Operation on groups",
      "operations": [
        {
          "method": "GET",
          "nickname": "getGroupByName",
          "type": "group",
          "parameters": [
            {
              "paramType": "path",
              "name": "groupName",
              "description": "Name of the group, ex: 'members'",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Get a group by its name",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "PUT",
          "nickname": "updateGroupByName",
          "type": "group",
          "parameters": [
            {
              "paramType": "path",
              "name": "groupName",
              "description": "Name of the group, ex: 'members'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "group",
              "description": "Group object to be created or updated.",
              "required": true,
              "type": "group"
            }
          ],
          "summary": "Update a group by its name",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "DELETE",
          "nickname": "deleteGroupByName",
          "parameters": [
            {
              "paramType": "path",
              "name": "groupName",
              "description": "Name of the group, ex: 'members'",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Delete a group by its name",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/group/{groupName}/@users",
      "description": "Group members adapter",
      "operations": [
        {
          "method": "GET",
          "nickname": "getGroupMembers",
          "type": "userList",
          "parameters": [
            {
              "paramType": "path",
              "name": "groupName",
              "description": "Name of the group, ex: 'members'",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Get the user members of a group",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/group/{groupName}/@groups",
      "description": "Group members group adapter",
      "operations": [
        {
          "method": "GET",
          "nickname": "getGroupMembersGroup",
          "type": "groupList",
          "parameters": [
            {
              "paramType": "path",
              "name": "groupName",
              "description": "Name of the group, ex: 'members'",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Get the group members of a group",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/group/search",
      "description": "Operation on groups",
      "operations": [
        {
          "method": "GET",
          "nickname": "searchGroup",
          "type": "groups",
          "parameters": [
            {
              "paramType": "query",
              "name": "q",
              "description": "Query string. Ex: 'Admin' will return Administrator user",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Search a group",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/group",
      "description": "Operation on groups",
      "operations": [
        {
          "method": "POST",
          "nickname": "createGroup",
          "type": "group",
          "parameters": [
            {
              "paramType": "body",
              "name": "group",
              "description": "Group object to be created or updated.",
              "required": true,
              "type": "group"
            }
          ],
          "summary": "Create a group",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/group/{groupName}/user/{userName}",
      "description": "Add a user to a group",
      "operations": [
        {
          "method": "POST",
          "nickname": "addAUserToGroup",
          "type": "user",
          "parameters": [
            {
              "paramType": "path",
              "name": "groupName",
              "description": "Name of the group, ex: 'members'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "userName",
              "description": "Username of the user, ex: 'Administrator'",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Add a user to a group",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/config/facets",
      "description": "List registered facets",
      "operations": [
        {
          "method": "GET",
          "nickname": "getFacets",
          "type": "facet",
          "summary": "List registered facets",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/config/facets/{facet}",
      "description": "Facet description",
      "operations": [
        {
          "method": "GET",
          "nickname": "getFacet",
          "type": "facet",
          "summary": "Facet description",
          "parameters": [
            {
              "paramType": "path",
              "name": "facet",
              "description": "The name of the facet",
              "required": true,
              "type": "string"
            }
          ],
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/@emptyWithDefault",
      "description": "Initialize an empty document with default properties given a document type",
      "operations": [
        {
          "method": "GET",
          "nickname": "getEmptyDocument",
          "type": "document",
          "parameters": [
            {
              "paramType": "query",
              "name": "type",
              "description": "The type of the empty document to be initialized",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "name",
              "description": "The name of the empty document to be initialized",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Initialize an empty document with default properties given a document type",
          "notes": "To retrieve all initialized properties, the 'properties: *' header must be used",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/path/{docPath}/@emptyWithDefault",
      "description": "Initialize an empty document with default properties given a document type and a parent",
      "operations": [
        {
          "method": "GET",
          "nickname": "getEmptyDocumentByPath",
          "type": "document",
          "parameters": [
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "type",
              "description": "The type of the empty document to be initialized",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "name",
              "description": "The name of the empty document to be initialized",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Initialize an empty document with default properties given a document type and a parent",
          "notes": "To retrieve all initialized properties, the 'properties: *' header must be used",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/id/{docId}/@emptyWithDefault",
      "description": "Initialize an empty document with default properties given a document type and a parent",
      "operations": [
        {
          "method": "GET",
          "nickname": "getEmptyDocumentById",
          "type": "document",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "type",
              "description": "The type of the empty document to be initialized",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "name",
              "description": "The name of the empty document to be initialized",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Initialize an empty document with default properties given a document type and a parent",
          "notes": "To retrieve all initialized properties, the 'properties: *' header must be used",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/config/types",
      "description": "List registered document types",
      "operations": [
        {
          "method": "GET",
          "nickname": "getDocTypes",
          "type": "docType",
          "summary": "List registered document type",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/config/types/{docType}",
      "description": "Document type description",
      "operations": [
        {
          "method": "GET",
          "nickname": "getDocType",
          "type": "docType",
          "summary": "Document type description",
          "parameters": [
            {
              "paramType": "path",
              "name": "docType",
              "description": "The name of the document type",
              "required": true,
              "type": "string"
            }
          ],
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/directory/{directoryName}",
      "description": "Get directory entries",
      "operations": [
        {
          "method": "GET",
          "nickname": "getDirectoryEntries",
          "type": "directoryEntries",
          "parameters": [
            {
              "paramType": "path",
              "name": "directoryName",
              "description": "Directory name. Ex: 'subject'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "currentPageIndex",
              "description": "Index of the current page",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "offset",
              "description": "The offset of the returned result set. If set, the 'currentPageIndex' parameter is ignored.",
              "required": false,
              "type": "integer"
            },
            {
              "paramType": "query",
              "name": "pageSize",
              "description": "Size of the page to retrieve",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "maxResults",
              "description": "Maximum results to retrieve",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "sortBy",
              "description": "Property to sort by, for example 'dc:title'",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "sortOrder",
              "description": "Sort order, accepts 'asc' or 'desc', default is 'desc'",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Get directory entries",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "POST",
          "nickname": "createDirectoryEntry",
          "type": "directoryEntry",
          "parameters": [
            {
              "paramType": "path",
              "name": "directoryName",
              "description": "Directory name. Ex: 'subject'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "Directory",
              "description": "Directory entry object that is created or updated in the directory 'directoryName'",
              "required": true,
              "type": "directoryEntry"
            }
          ],
          "summary": "Creates a directory entry",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/directory/{directoryName}/{entryId}",
      "description": "Operation on directory entry",
      "operations": [
        {
          "method": "GET",
          "nickname": "getDirectoryEntry",
          "type": "directoryEntry",
          "parameters": [
            {
              "paramType": "path",
              "name": "directoryName",
              "description": "Directory name. Ex: 'subject'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "entryId",
              "description": "Directory entry id",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Get a directory entry",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "PUT",
          "nickname": "updateDirectoryEntry",
          "type": "directoryEntry",
          "parameters": [
            {
              "paramType": "path",
              "name": "directoryName",
              "description": "Directory name. Ex: 'subject'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "entryId",
              "description": "Directory entry id",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "Directory",
              "description": "Directory entry object that is created or updated in the directory 'directoryName'",
              "required": true,
              "type": "directoryEntry"
            }
          ],
          "summary": "Update a directory entry",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "DELETE",
          "nickname": "deleteDirectoryEntry",
          "parameters": [
            {
              "paramType": "path",
              "name": "directoryName",
              "description": "Directory name. Ex: 'subject'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "entryId",
              "description": "Directory entry id",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Delete a directory entry",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/path/{docPath}/@convert",
      "description": "Convert the main Blob of the document",
      "operations": [
        {
          "method": "GET",
          "nickname": "convertDocumentMainBlobByPath",
          "type": "documents",
          "parameters": [
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "name",
              "description": "The name of the converter to execute",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "type",
              "description": "The requested mime type for the converted Blob, such as 'application/pdf'",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "format",
              "description": "The requested extension of the converted Blob, such as 'pdf'",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Convert the main Blob of the document",
          "notes": "One of the 'name', 'type' or 'format' parameters must be passed.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/path/{docPath}/@blob/{blobXpath}/@convert",
      "description": "Convert the Blob at the given xpath of the document",
      "operations": [
        {
          "method": "GET",
          "nickname": "convertDocumentBlobByPath",
          "type": "documents",
          "parameters": [
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "name",
              "description": "The name of the converter to execute",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "type",
              "description": "The requested mime type for the converted Blob, such as 'application/pdf'",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "format",
              "description": "The requested extension of the converted Blob, such as 'pdf'",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Convert the Blob at the given xpath of the document",
          "notes": "One of the 'name', 'type' or 'format' parameters must be passed.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/id/{docId}/@convert",
      "description": "Convert the main Blob of the document",
      "operations": [
        {
          "method": "GET",
          "nickname": "convertDocumentMainBlobById",
          "type": "documents",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "name",
              "description": "The name of the converter to execute",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "type",
              "description": "The requested mime type for the converted Blob, such as 'application/pdf'",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "format",
              "description": "The requested extension of the converted Blob, such as 'pdf'",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Convert the main Blob of the document",
          "notes": "One of the 'name', 'type' or 'format' parameters must be passed.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/path/{docId}/@blob/{blobXpath}/@convert",
      "description": "Convert the Blob at the given xpath of the document",
      "operations": [
        {
          "method": "GET",
          "nickname": "convertDocumentBlobById",
          "type": "documents",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "name",
              "description": "The name of the converter to execute",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "type",
              "description": "The requested mime type for the converted Blob, such as 'application/pdf'",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "format",
              "description": "The requested extension of the converted Blob, such as 'pdf'",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Convert the Blob at the given xpath of the document",
          "notes": "One of the 'name', 'type' or 'format' parameters must be passed.",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/path/{docPath}/@children",
      "description": "Operation on document's children by its id",
      "operations": [
        {
          "method": "GET",
          "nickname": "getChildrenByPath",
          "type": "documents",
          "parameters": [
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "currentPageIndex",
              "description": "Index of the current page",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "offset",
              "description": "The offset of the returned result set. If set, the 'currentPageIndex' parameter is ignored.",
              "required": false,
              "type": "integer"
            },
            {
              "paramType": "query",
              "name": "pageSize",
              "description": "Size of the page to retrieve",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "maxResults",
              "description": "Maximum results to retrieve",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "sortBy",
              "description": "Property to sort by, for example 'dc:title'",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "sortOrder",
              "description": "Sort order, accepts 'asc' or 'desc', default is 'desc'",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXDocumentProperties",
              "description": "Schemas to be included in response",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXContext-Category",
              "description": "Categories to be included in context parameters map",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-Versioning-Option",
              "description": "Checkin Document Version. Return the last document version. (not live document) | Values: major or minor or none",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Get the children of a document by its path",
          "notes": "Only documents which you have permission to see will be returned",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/id/{docId}/@children",
      "description": "Operation on document's children by its id",
      "operations": [
        {
          "method": "GET",
          "nickname": "getChildrenById",
          "type": "documents",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "currentPageIndex",
              "description": "Index of the current page",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "offset",
              "description": "The offset of the returned result set. If set, the 'currentPageIndex' parameter is ignored.",
              "required": false,
              "type": "integer"
            },
            {
              "paramType": "query",
              "name": "pageSize",
              "description": "Size of the page to retrieve",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "maxResults",
              "description": "Maximum results to retrieve",
              "required": false,
              "type": "long"
            },
            {
              "paramType": "query",
              "name": "sortBy",
              "description": "Property to sort by, for example 'dc:title'",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "query",
              "name": "sortOrder",
              "description": "Sort order, accepts 'asc' or 'desc', default is 'desc'",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXDocumentProperties",
              "description": "Schemas to be included in response",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-NXContext-Category",
              "description": "Categories to be included in context parameters map",
              "required": false,
              "type": "string"
            },
            {
              "paramType": "header",
              "name": "X-Versioning-Option",
              "description": "Checkin Document Version. Return the last document version. (not live document) | Values: major or minor or none",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Get the children of a document by its id",
          "notes": "Only documents which you have permission to see will be returned",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/path/{docPath}/@bo/{adapterName}",
      "description": "Manipulate a business object adapter on a document by its path",
      "operations": [
        {
          "method": "GET",
          "nickname": "getBOByPath",
          "responseClass": "BusinessObject",
          "parameters": [
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "adapterName",
              "description": "Name of the adapter",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Get the business object adapter on a document given its path",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "PUT",
          "nickname": "updateBOByPath",
          "responseClass": "BusinessObject",
          "parameters": [
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "adapterName",
              "description": "Name of the adapter",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "document",
              "description": "The created or updated business object",
              "required": true,
              "type": "BusinessObject"
            }
          ],
          "summary": "Updates the business object adapter on a document given its path",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/path/{docPath}/@children/@bo/{adapterName}",
      "description": "Get the list of business object of the children of a document by its path",
      "operations": [
        {
          "method": "GET",
          "nickname": "getBOByPath",
          "responseClass": "BusinessObjectList",
          "parameters": [
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "adapterName",
              "description": "Name of the adapter",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Get the list of business object of the children of a document by its path",
          "notes": "<ul><li>If a document can't be adapted, the resulting item will be null</li><li> This type of call works for every API endpoint that responds DocumentList (@search, @pp ...)</li></ul>",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/path/{docPath}/@bo/{adapterName}/{docName}",
      "description": "Create a document by its business object",
      "operations": [
        {
          "method": "POST",
          "nickname": "createBOByPath",
          "responseClass": "BusinessObject",
          "parameters": [
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "adapterName",
              "description": "Name of the adapter",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "docName",
              "description": "Name of the document",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Creates a document based on its business object",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/id/{docId}/@bo/{adapterName}",
      "description": "Manipulate a business object adapter on a document by its id",
      "operations": [
        {
          "method": "GET",
          "nickname": "getBOById",
          "responseClass": "BusinessObject",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "adapterName",
              "description": "Name of the adapter",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Get the business object adapter on a document given its id",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "PUT",
          "nickname": "updateBOById",
          "responseClass": "BusinessObject",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "adapterName",
              "description": "Name of the adapter",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "document",
              "description": "The created or updated business object",
              "required": true,
              "type": "BusinessObject"
            }
          ],
          "summary": "Updates the business object adapter on a document given its id",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/id/{docId}/@children/@bo/{adapterName}",
      "description": "Get the list of business object of the children of a document by its id",
      "operations": [
        {
          "method": "GET",
          "nickname": "getBOByPath",
          "responseClass": "BusinessObjectList",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "adapterName",
              "description": "Name of the adapter",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Get the list of business object of the children of a document by its id",
          "notes": "<ul><li>If a document can't be adapted, the resulting item will be null</li><li> This type of call works for every API endpoint that responds DocumentList (@search, @pp ...)</li></ul>",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/id/{docId}/@bo/{adapterName}/{docName}",
      "description": "Create a document by its business object",
      "operations": [
        {
          "method": "POST",
          "nickname": "createBOById",
          "responseClass": "BusinessObject",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "adapterName",
              "description": "Name of the adapter",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "docName",
              "description": "Name of the document",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Creates a document based on its business object",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/path/{docPath}/@blob/{fieldPath}",
      "description": "Get main document blob",
      "operations": [
        {
          "method": "GET",
          "nickname": "getBlob",
          "parameters": [
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "fieldPath",
              "description": "The field path you want do download (ex: file:content)",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Get the main blob of a document by its path",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/id/{docId}/@blob/{fieldPath}",
      "description": "Get main document blob",
      "operations": [
        {
          "method": "GET",
          "nickname": "getBlob",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "fieldPath",
              "description": "The field path you want do download (ex: file:content)",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Get the main blob of a document by its id",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/automation",
      "description": "Automation base",
      "operations": [
        {
          "method": "GET",
          "nickname": "getOperationsList",
          "responseClass": "OperationDescriptionList",
          "summary": "Gets the list of all operation/chain",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/automation/{operationName}",
      "description": "Execute an operation or a chain on a document",
      "operations": [
        {
          "method": "POST",
          "nickname": "executeOperation",
          "parameters": [
            {
              "paramType": "path",
              "name": "operationName",
              "description": "Name of the operation",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "operationParams",
              "description": "The operation parameters",
              "required": true,
              "type": "OperationParams"
            }
          ],
          "consumes": [
            "application/json"
          ],
          "summary": "Execute an operation or a chain on a document",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "GET",
          "nickname": "getOperationDescription",
          "responseClass": "OperationDescription",
          "parameters": [
            {
              "paramType": "path",
              "name": "operationName",
              "description": "Name of the operation",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Gets the description of the operation/chain",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/path/{docPath}/@op/{operationName}",
      "description": "Execute an operation or a chain on a document",
      "operations": [
        {
          "method": "POST",
          "nickname": "executeOperationOnDocByPath",
          "parameters": [
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "operationName",
              "description": "Name of the operation",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "operationParams",
              "description": "The operation parameters",
              "required": true,
              "type": "OperationParams"
            }
          ],
          "consumes": [
            "application/json"
          ],
          "summary": "Execute an operation or a chain on a document",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/path/{docPath}/@children/@op/{operationName}",
      "description": "Execute an operation or a chain on the children of a document",
      "operations": [
        {
          "method": "POST",
          "nickname": "executeOperationOnDocByPath",
          "parameters": [
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "operationName",
              "description": "Name of the operation",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "operationParams",
              "description": "The operation parameters",
              "required": true,
              "type": "OperationParams"
            }
          ],
          "consumes": [
            "application/json"
          ],
          "summary": "Execute an operation or a chain on the children of a document",
          "notes": "This works on every API endpoint that return DocumentList",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/path/{docPath}/@audit",
      "description": "View the audit of a document",
      "operations": [
        {
          "method": "GET",
          "nickname": "getAuditByPath",
          "type": "LogEntries",
          "parameters": [
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "View the audit trail of a document given its path",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/id/{docId}/@audit",
      "description": "View the audit of a document",
      "operations": [
        {
          "method": "GET",
          "nickname": "getAuditById",
          "type": "LogEntries",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "View the audit trail of a document given its id",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/id/{docId}/@annotation",
      "description": "Create or update an annotation",
      "operations": [
        {
          "method": "POST",
          "nickname": "createAnnotation",
          "type": "annotation",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "Annotation",
              "description": "Annotation object that is created or updated.",
              "required": true,
              "type": "annotation"
            }
          ],
          "summary": "Create an annotation on a given document",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "PUT",
          "nickname": "updateAnnotation",
          "type": "annotation",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "body",
              "name": "Annotation",
              "description": "Annotation object that is created or updated.",
              "required": true,
              "type": "annotation"
            }
          ],
          "summary": "Update an annotation on a given document",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "GET",
          "nickname": "getAnnotations",
          "type": "annotationList",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "fieldPath",
              "description": "The field path you want do download (ex: file:content)",
              "required": false,
              "type": "string"
            }
          ],
          "summary": "Get all annotations on a given document blob",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/id/{docId}/@annotation/{annotationId}",
      "description": "Retrieve or delete an annotation",
      "operations": [
        {
          "method": "GET",
          "nickname": "getAnnotation",
          "type": "annotation",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "annotationId",
              "description": "Id of the annotation",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Retrieve an annotation on a document given its id",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        },
        {
          "method": "DELETE",
          "nickname": "deleteAnnotation",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            },
            {
              "paramType": "path",
              "name": "annotationId",
              "description": "Id of the annotation",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "Delete an annotation on a document given its id",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/path/{docPath}/@acl",
      "description": "View the ACLs of a document",
      "operations": [
        {
          "method": "GET",
          "nickname": "getACLByPath",
          "responseClass": "Acp",
          "parameters": [
            {
              "paramType": "path",
              "name": "docPath",
              "description": "Path of the document, ex: 'default-domain'",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "View the ACL of a document given its path",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/id/{docId}/@acl",
      "description": "View the ACLs of a document",
      "operations": [
        {
          "method": "GET",
          "nickname": "getACLByPath",
          "responseClass": "Acp",
          "parameters": [
            {
              "paramType": "path",
              "name": "docId",
              "description": "Id of the document",
              "required": true,
              "type": "string"
            }
          ],
          "summary": "View the ACL of a document given its id",
          "notes": "",
          "responseMessages": [
            {
              "code": 401,
              "message": "Not Authorized to get document"
            },
            {
              "code": 404,
              "message": "Document not found"
            }
          ]
        }
      ]
    }
  ],
  "models": {
    "Ace": {
      "uniqueItems": false,
      "properties": {
        "username": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "permission": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "granted": {
          "uniqueItems": false,
          "type": "boolean",
          "required": true
        }
      }
    },
    "Acl": {
      "id": "Acl",
      "uniqueItems": false,
      "properties": {
        "name": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "ace": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "Ace"
          },
          "required": true
        }
      }
    },
    "Acp": {
      "id": "Acp",
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "acls": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "Acl"
          }
        }
      }
    },
    "annotation": {
      "id": "annotation",
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "id": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "documentId": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "xpath": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "color": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "date": {
          "uniqueItems": false,
          "type": "date-time",
          "required": true
        },
        "flags": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "name": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "lastModifier": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "page": {
          "uniqueItems": false,
          "type": "long",
          "required": true
        },
        "position": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "creationDate": {
          "uniqueItems": false,
          "type": "date-time",
          "required": true
        },
        "opacity": {
          "uniqueItems": false,
          "type": "double",
          "required": true
        },
        "subject": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "security": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        }
      }
    },
    "annotationList": {
      "id": "annotationList",
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "entries": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "annotation"
          },
          "required": true
        }
      }
    },
    "LogEntry": {
      "id": "LogEntry",
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "category": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "principalName": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "comment": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "docLifeCycle": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "docPath": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "docType": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "docUUID": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "eventId": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "repositoryId": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "eventDate": {
          "uniqueItems": false,
          "type": "date-time",
          "required": true
        },
        "logDate": {
          "uniqueItems": false,
          "type": "date-time",
          "required": true
        }
      }
    },
    "LogEntries": {
      "id": "LogEntries",
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "isPaginable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "resultCount": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "maxPageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageIndex": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageOffset": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "numberOfPages": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "isPreviousPageAvailable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isNext": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isLastPageAvailable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isSortable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "hasError": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "erroMessage": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "totalSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageIndex": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageCount": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "entries": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "LogEntry"
          },
          "required": true
        }
      }
    },
    "OperationParams": {
      "id": "OperationParams",
      "uniqueItems": false,
      "properties": {
        "params": {
          "uniqueItems": false,
          "type": "object",
          "required": true
        },
        "context": {
          "uniqueItems": false,
          "type": "object",
          "required": true
        }
      }
    },
    "OperationParamDescription": {
      "id": "OperationParamDescription",
      "uniqueItems": false,
      "properties": {
        "name": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "description": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "required": {
          "uniqueItems": false,
          "type": "boolean",
          "required": true
        },
        "widget": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "order": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "values": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "required": false
        }
      }
    },
    "OperationDescription": {
      "id": "OperationDescription",
      "uniqueItems": false,
      "properties": {
        "id": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "label": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "category": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "requires": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "description": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "url": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "signature": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "required": true
        },
        "params": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "OperationParamDescription"
          },
          "required": true
        }
      }
    },
    "OperationDescriptionList": {
      "id": "OperationParamDescriptionList",
      "uniqueItems": false,
      "properties": {
        "path": {
          "uniqueItems": false,
          "type": "container",
          "required": true
        },
        "codec": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "required": true
        },
        "operations": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "OperationDescription"
          },
          "required": true
        }
      }
    },
    "BusinessObject": {
      "id": "BusinessObject",
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "value": {
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "BusinessObjectList": {
      "id": "BusinessObjectList",
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "isPaginable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "resultCount": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "maxPageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageIndex": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageOffset": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "numberOfPages": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "isPreviousPageAvailable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isNext": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isLastPageAvailable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isSortable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "hasError": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "erroMessage": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "totalSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageIndex": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageCount": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "entries": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "BusinessObject"
          },
          "required": true
        }
      }
    },
    "document": {
      "id": "document",
      "type": "any",
      "required": false,
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "repository": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "uid": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "path": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "type": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "state": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "versionLabel": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "title": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "lastModified": {
          "uniqueItems": false,
          "type": "Date",
          "required": false
        },
        "properties": {
          "uniqueItems": true,
          "type": "container",
          "items": {
            "$ref": "Property"
          }
        },
        "facets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "required": false
        },
        "changeToken": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "contextParameters": {
          "uniqueItems": false,
          "type": "object",
          "required": false
        }
      }
    },
    "documents": {
      "id": "documents",
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "isPaginable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "resultCount": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "maxPageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageIndex": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageOffset": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "numberOfPages": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "isPreviousPageAvailable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isNext": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isLastPageAvailable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isSortable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "hasError": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "erroMessage": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "totalSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageIndex": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageCount": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "entries": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "Document"
          },
          "required": true
        }
      }
    },
    "directoryEntry": {
      "id": "directoryEntry",
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "directoryName": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "properties": {
          "uniqueItems": false,
          "type": "container",
          "items": {
            "$ref": "Property"
          }
        }
      }
    },
    "directoryEntries": {
      "id": "directoryEntries",
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "isPaginable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "resultCount": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "maxPageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageIndex": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageOffset": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "numberOfPages": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "isPreviousPageAvailable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isNext": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isLastPageAvailable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isSortable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "hasError": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "erroMessage": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "totalSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageIndex": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageCount": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "entries": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "directoryEntry"
          },
          "required": true
        }
      }
    },
    "docType": {
      "id": "docType",
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        },
        "parent": {
          "type": "string",
          "required": true
        },
        "facets": {
          "type": "array",
          "required": true,
          "items": {
            "type": "string"
          }
        },
        "schemas": {
          "type": "array",
          "required": true,
          "items": {
            "schema": {
              "id": "schema",
              "properties": {
                "name": {
                  "type": "string",
                  "required": true
                },
                "@prefix": {
                  "type": "string",
                  "required": true
                },
                "fields": {
                  "type": "object",
                  "required": true
                }
              }
            }
          }
        }
      }
    },
    "facet": {
      "id": "facet",
      "properties": {
        "name": {
          "type": "string",
          "required": true
        },
        "schemas": {
          "type": "array",
          "items": {
            "schema": {
              "id": "schema",
              "properties": {
                "name": {
                  "type": "string",
                  "required": true
                },
                "@prefix": {
                  "type": "string",
                  "required": true
                },
                "fields": {
                  "type": "object",
                  "required": true
                }
              }
            }
          }
        }
      }
    },
    "GroupRef": {
      "id": "GroupRef",
      "uniqueItems": false,
      "properties": {
        "name": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "label": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "url": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        }
      }
    },
    "user": {
      "id": "user",
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "id": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "properties": {
          "uniqueItems": false,
          "type": "container",
          "items": {
            "$ref": "Property"
          }
        },
        "extendedGroups": {
          "uniqueItems": false,
          "type": "container",
          "items": {
            "$ref": "GroupRef"
          }
        },
        "isAdministrator": {
          "uniqueItems": false,
          "type": "boolean",
          "required": true
        },
        "isAnonymous": {
          "uniqueItems": false,
          "type": "boolean",
          "required": true
        }
      }
    },
    "userList": {
      "id": "userList",
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "isPaginable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "resultCount": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "maxPageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageIndex": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageOffset": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "numberOfPages": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "isPreviousPageAvailable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isNext": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isLastPageAvailable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isSortable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "hasError": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "erroMessage": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "totalSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageIndex": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageCount": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "entries": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "user"
          },
          "required": true
        }
      }
    },
    "changePassword": {
      "id": "changePassword",
      "properties": {
        "oldPassword": {
          "type": "string",
          "required": true
        },
        "newPassword": {
          "type": "string",
          "required": true
        }
      }
    },
    "oauth2ProviderData": {
      "id": "oauth2ProviderData",
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "serviceName": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "description": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "clientId": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "clientSecret": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "authorizationServerURL": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "tokenServerURL": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "userAuthorizationURL": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "scopes": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "required": false
        },
        "isEnabled": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isAvailable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "authorizationURL": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "isAuthorized": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "userId": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        }
      }
    },
    "oauth2ProviderDataList": {
      "id": "oauth2ProviderDataList",
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "isPaginable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "resultCount": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "maxPageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageIndex": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageOffset": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "numberOfPages": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "isPreviousPageAvailable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isNext": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isLastPageAvailable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isSortable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "hasError": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "erroMessage": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "totalSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageIndex": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageCount": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "entries": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "oauth2ProviderData"
          },
          "required": true
        }
      }
    },
    "oauth2TokenData": {
      "id": "oauth2TokenData",
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "serviceName": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "nuxeoLogin": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "serviceLogin": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "clientId": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "isShared": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "sharedWith": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "required": false
        },
        "creationDate": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        }
      }
    },
    "oauth2TokenDataList": {
      "id": "oauth2TokenDataList",
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "isPaginable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "resultCount": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "maxPageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageIndex": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageOffset": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "numberOfPages": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "isPreviousPageAvailable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isNext": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isLastPageAvailable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isSortable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "hasError": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "erroMessage": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "totalSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageIndex": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageCount": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "entries": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "oauth2TokenData"
          },
          "required": true
        }
      }
    },
    "oauth2ProviderTokenData": {
      "id": "oauth2ProviderTokenData",
      "uniqueItems": false,
      "properties": {
        "token": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        }
      }
    },
    "oauth2ClientData": {
      "id": "oauth2ClientData",
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "id": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "name": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "isEnabled": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        }
      }
    },
    "oauth2ClientDataList": {
      "id": "oauth2ClientDataList",
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "isPaginable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "resultCount": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "maxPageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageIndex": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageOffset": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "numberOfPages": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "isPreviousPageAvailable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isNext": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isLastPageAvailable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isSortable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "hasError": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "erroMessage": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "totalSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageIndex": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageCount": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "entries": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "oauth2ClientData"
          },
          "required": true
        }
      }
    },
    "query": {
      "id": "query",
      "uniqueItems": false,
      "properties": {
        "name": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "label": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "url": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        }
      }
    },
    "schema": {
      "id": "schema",
      "properties": {
        "name": {
          "type": "string",
          "required": true
        },
        "@prefix": {
          "type": "string",
          "required": true
        },
        "fields": {
          "type": "object",
          "required": true
        }
      }
    },
    "savedsearch": {
      "id": "savedsearch",
      "type": "any",
      "required": false,
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "id": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "title": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "query": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "queryLanguage": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "pageProviderName": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "pageSize": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "currentPageIndex": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "maxResults": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "sortBy": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "sortOrder": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "queryParams": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "params": {
          "uniqueItems": false,
          "type": "object",
          "required": false
        }
      }
    },
    "savedsearches": {
      "id": "savedsearches",
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "isPaginable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "resultCount": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "maxPageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageIndex": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "currentPageOffset": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "numberOfPages": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "isPreviousPageAvailable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isNext": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isLastPageAvailable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "isSortable": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "hasError": {
          "uniqueItems": false,
          "type": "boolean",
          "required": false
        },
        "erroMessage": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "totalSize": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageIndex": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "pageCount": {
          "uniqueItems": false,
          "type": "long",
          "required": false
        },
        "entries": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "savedsearch"
          },
          "required": true
        }
      }
    },
    "task": {
      "id": "task",
      "type": "any",
      "required": false,
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "id": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "name": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "workflowId": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "state": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "directive": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "created": {
          "uniqueItems": false,
          "type": "Date",
          "required": false
        },
        "dueDate": {
          "uniqueItems": false,
          "type": "Date",
          "required": false
        },
        "type": {
          "uniqueItems": false,
          "type": "Date",
          "required": false
        },
        "nodeName": {
          "uniqueItems": false,
          "type": "Date",
          "required": false
        },
        "targetDocumentIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "required": false
        },
        "actors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "required": false
        },
        "comments": {
          "type": "array",
          "items": {
            "$ref": "taskComments"
          },
          "required": false
        },
        "variables": {
          "uniqueItems": true,
          "type": "container",
          "items": {
            "$ref": "Property"
          }
        },
        "taskInfo": {
          "uniqueItems": true,
          "type": "taskInfo",
          "required": false
        }
      }
    },
    "taskInfo": {
      "id": "taskInfo",
      "uniqueItems": false,
      "properties": {
        "actions": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "taskAction"
          },
          "required": true
        },
        "layoutResource": {
          "uniqueItems": false,
          "type": "layoutResource",
          "required": true
        }
      }
    },
    "layoutResource": {
      "id": "layoutResource",
      "uniqueItems": false,
      "properties": {
        "name": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "url": {
          "uniqueItems": false,
          "type": "layoutResource",
          "required": true
        }
      }
    },
    "taskComments": {
      "id": "taskComments",
      "uniqueItems": false,
      "properties": {
        "author": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "date": {
          "uniqueItems": false,
          "type": "Date",
          "required": true
        }
      }
    },
    "taskAction": {
      "id": "taskAction",
      "uniqueItems": false,
      "properties": {
        "name": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "url": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "label": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        }
      }
    },
    "tasks": {
      "id": "tasks",
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "entries": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "task"
          },
          "required": true
        }
      }
    },
    "taskCompletionRequest": {
      "id": "taskCompletionRequest",
      "type": "any",
      "required": false,
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "comment": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "nodeVariables": {
          "uniqueItems": true,
          "type": "container",
          "items": {
            "$ref": "Property"
          }
        },
        "worflowVariables": {
          "uniqueItems": true,
          "type": "container",
          "items": {
            "$ref": "Property"
          }
        }
      }
    },
    "AuthenticationTokenList": {
      "id": "AuthenticationToken",
      "uniqueItems": false,
      "properties": {
        "token": {
          "uniqueItems": true,
          "type": "string",
          "required": true
        },
        "userName": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "url": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        }
      }
    },
    "workflow": {
      "id": "workflow",
      "type": "any",
      "required": false,
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "id": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "name": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "initiator": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "attachedDocumentIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "required": false
        },
        "variables": {
          "uniqueItems": true,
          "type": "container",
          "items": {
            "$ref": "Property"
          }
        }
      }
    },
    "workflows": {
      "id": "workflows",
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "entries": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "workflow"
          },
          "required": true
        }
      }
    },
    "workflowRequest": {
      "id": "workflowRequest",
      "type": "any",
      "required": false,
      "uniqueItems": false,
      "properties": {
        "entity-type": {
          "uniqueItems": false,
          "type": "string",
          "required": true
        },
        "workflowModelName": {
          "uniqueItems": false,
          "type": "string",
          "required": false
        },
        "documentIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "required": false
        },
        "worflowVariables": {
          "uniqueItems": true,
          "type": "container",
          "items": {
            "$ref": "Property"
          }
        }
      }
    },
    "workflowGraph": {
      "id": "workflowGraph",
      "type": "any",
      "required": false,
      "uniqueItems": false,
      "properties": {}
    }
  }
}
